
GAS LISTING imul.s 			page 1


   1              		.global	_start
   2              		.text
   3              	_start:	
   4              		# レジスタとの乗算: AX ← AL * CL
   5 0000 B00C     		movb	$12, %al		# al: 12
   6 0002 B1F4     		movb	$-12, %cl		# cl: -12
   7 0004 F6E9     		imulb	%cl			# of:1 cf:1 ax: -144
   8              		
   9              		# レジスタとの乗算: DX:AX ← AX * CX
  10 0006 66B83412 		movw	$0x1234, %ax		# ax:0x1234
  11 000a 66B90200 		movw	$0x0002, %cx		# cx:0x0002
  12 000e 66F7E9   		imulw	%cx			# of:0 cf:0 dx:0x0000 ax:0x2468
  13              		
  14              		# レジスタとの乗算: EDX:EAX ← EAX * ECX
  15 0011 B8785634 		movl	$0x12345678, %eax	# eax:0x12345678
  15      12
  16 0016 B9000001 		movl	$0x00010000, %ecx	# ecx:0x00010000
  16      00
  17 001b F7E9     		imull	%ecx			# of:1 cf:1 edx:0x00001234 eax:0x56780000
  18              		
  19              		# レジスタと即値の乗算: EAX ← EAX * 2
  20 001d B8111111 		movl	$0x11111111, %eax	# eax:0x11111111
  20      11
  21 0022 6BC002   		imull	$2, %eax		# of:0 cf:0 eax:0x22222222
  22              	
  23              		# レジスタとメモリの値の乗算: EAX ← EAX * [val_l]
  24 0025 0FAF0503 		imull	val_l, %eax		# of:1 cf:1 eax:0x22222000
  24      000000
  25              	
  26              		# レジスタと即値の乗算: EAX ← ECX * 2
  27 002c 6BC102   		imull	$2, %ecx, %eax		# of:0 cf:0 eax:0x00020000
  28              	
  29 002f B8010000 		movl	$1, %eax
  29      00
  30 0034 CD80     		int	$0x80
  31              		.data
  32 0000 10       	val_b:	.byte	0x10
  33 0001 3412     	val_w:	.word	0x1234
  34 0003 00100000 	val_l:	.long	0x00001000
